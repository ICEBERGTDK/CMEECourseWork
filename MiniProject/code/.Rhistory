}
return(ls)
}
neutral_time_series(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),2)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- NULL
for (i in 1:duration) {
c <- neutral_generation(c)
print(i)
#ls[i] <- c
}
return(ls)
}
neutral_time_series(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),2)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- NULL
for (i in 1:duration) {
c <- neutral_generation(c)
print(i)
ls[i] <- c
}
return(ls)
}
neutral_time_series(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),2)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- NULL
for (i in 1:duration) {
c <- neutral_generation(c)
print(i)
ls[i] <- unlist(c)
}
return(ls)
}
neutral_time_series(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),2)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list()
for (i in 1:duration) {
c <- neutral_generation(c)
print(i)
ls[i] <- c
}
return(ls)
}
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list()
for (i in 1:duration) {
c <- neutral_generation(c)
print(i)
ls[i] <- c
}
return(ls)
}
neutral_time_series(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),2)
class(neutral_generation(c(1,2,3,4,5,6)))
neutral_generation(c(1,2,3,4))
# Question 6
neutral_generation <- function(community){
num = species_richness(community)/2
while (species_richness(community)>num) {
community <- neutral_step(community)
}
return(community)
}
neutral_generation(c(1,2,3,4))
class(neutral_generation(c(1,2,3,4,5,6)))
class(community)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list()
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i] <- list(c)
}
return(ls)
}
neutral_time_series(c(1,2,3,4,5,6,7,8),2)
neutral_time_series(c(1,2,3,4,5,6,7,8),2)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
return(ls)
}
neutral_time_series(c(1,2,3,4,5,6,7,8),2)
neutral_time_series(init_community_max(7),20)
init_community_max(7)
choose_two(init_community_max(7))
neutral_step(init_community_max(7))
neutral_generation(init_community_max(7))
neutral_time_series(init_community_max(7),2)
# Question 6
neutral_generation <- function(community){
num = species_richness(community)/2
while (species_richness(community)>ceiling(num)) {
community <- neutral_step(community)
}
return(community)
}
neutral_generation(c(init_community_max(7)))
neutral_time_series(init_community_max(7),20)
class(ls)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
class(ls)
return(ls)
}
neutral_time_series(init_community_max(7),20)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
print(class(ls))
return(ls)
}
neutral_time_series(init_community_max(7),20)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
df <- data.frame()
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
df$point <- ls
df$time <- c(1:(length(ls)+1))
return(df)
}
neutral_time_series(init_community_max(7),20)
community <- init_community_max(7)
duration <- 20
c <- community
ls <- list(c)
df <- data.frame()
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
df$point <- ls
df$time <- c(1:(length(ls)+1))
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
df <- data.frame(ls)
View(df)
df <- t(data.frame(ls))
View(df)
df$time <- c(1:(duration+1))
View(df)
df <- t(data.frame(ls))
View(df)
time <- c(1:(duration+1))
time <- list(1:(duration+1))
View(time)
df$time <- time
df <- t(data.frame(ls))
View(time)
df$time <- 1:(duration+1)
View(df)
df <- t(data.frame(ls))
df$time <- 1:(duration+1)
View(df)
df <- t(data.frame(ls))
View(df)
return(df)
print(df)
row.names(df) <- 1:(duration+1)
View(df)
print(df)
df$time <- 1:(duration+1)
df <- t(data.frame(ls))
row.names(df) <- 1:(duration+1)
names(df) <- 1:length(community)
View(df)
names(df) <- 1:length(community)
View(df)
colnames(df) <- 1:length(community)
View(df)
return(df)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
df <- t(data.frame(ls))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
return(df)
}
neutral_time_series(init_community_max(7),20)
df$Time <- 1:duration
View(df)
neutral_time_series(init_community_max(7),20)
df <- neutral_time_series(init_community_max(100),duration = 200)
df$Time <- 1:200
df <- as.data.frame(neutral_time_series(init_community_max(100),duration = 200))
df$Time <- 1:duration
df$Time <- 1:(duration+1)
df$Time <- 0:duration
df <- neutral_time_series(init_community_max(100),duration = 200)
View(df)
neutral_time_series(init_community_max(7),20)
df$Time <- 0:duration
df <- as.data.frame(neutral_time_series(init_community_max(100),duration = 200))
df$Time <- 0:duration
df$Time <- 0:200
View(df)
data1 <- data.frame(i = df[i], Time <- 0:duration)
duration = 200
data1 <- data.frame(i = df[i], Time <- 0:duration)
View(data1)
View(df)
colnames(data1) <- c(i,"Time")
View(data1)
i <- 1
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c(i,"Time")
View(data1)
duration = 200
df <- as.data.frame(neutral_time_series(init_community_max(100),duration))
df$Time <- 0:duration
data <- data.frame()
for (i in 1:duration){
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c(i,"Time")
data <- rbind(data,data1)
}
duration = 200
df <- as.data.frame(neutral_time_series(init_community_max(100),duration))
df$Time <- 0:duration
data <- data.frame()
for (i in 1:duration){
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c("num","Time")
data <- rbind(data,data1)
}
duration = 200
df <- as.data.frame(neutral_time_series(init_community_max(100),duration))
df$Time <- 0:duration
data <- data.frame()
data1 <- data.frame(i = df[i], Time <- 0:duration)
View(data1)
data <- rbind(data,data1)
View(data)
data1 <- data.frame(i = df[:i], Time <- 0:duration)
data1 <- data.frame(i = df[,i], Time <- 0:duration)
data1 <- data.frame(i = df[i], Time <- i)
View(df)
df[1]
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c("num","Time")
duration = 200
df <- as.data.frame(neutral_time_series(init_community_max(100),duration))
df$Time <- 0:duration
data <- data.frame()
data1 <- data.frame(i = df[i], Time <- 0:duration)
View(data)
i=1
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c("num","Time")
data <- rbind(data,data1)
duration = 200
df <- as.data.frame(neutral_time_series(init_community_max(100),duration))
df$Time <- 0:duration
data <- data.frame()
for (i in 1:100){
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c("num","Time")
data <- rbind(data,data1)
}
View(data)
plot(data$Time, data$num)
plot(data$Time, data$num, pch=20)
plot(data$num, data$Time, pch=20)
i <- runif()
i <- runif(1)
# Question 9
neutral_step_speciation <- function(community,speciation_rate)  {
if (runif(1)>speciation_rate){
neutral_step(community)
}
}
neutral_step_speciation(c(10,5,13),v=0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),v=0.2)
neutral_step_speciation(c(10,5,13),v=0.2)
neutral_step_speciation(c(10,5,13),0.2)
# Question 9
neutral_step_speciation <- function(community,speciation_rate)  {
if (runif(1)<speciation_rate){
neutral_step(community)
}else{
return(community)
}
}
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
neutral_step_speciation(c(10,5,13),0.2)
# Question 10
neutral_generation_speciation <- function(community,speciation_rate)  {
if (runif(1)<speciation_rate){
neutral_generation(community)
}else{
return(community)
}
}
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
neutral_generation_speciation(init_community_max(8),0.5)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
df <- t(data.frame(ls))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
return(as.vector(as.matrix(df)))
}
neutral_time_series(init_community_max(8),2)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
df <- t(data.frame(ls))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
return(as.matrix(df))
}
neutral_time_series(init_community_max(8),2)
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
df <- t(data.frame(ls))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
return(ls)
}
neutral_time_series(init_community_max(8),2)
# Question 8
question_8 <- function() {
duration = 200
df <- t(data.frame(neutral_time_series(init_community_max(100),duration)))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
df$Time <- 0:duration
data <- data.frame()
for (i in 1:100){
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c("num","Time")
data <- rbind(data,data1)
}
plot(data$num, data$Time, pch=20)
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
# Question 8
question_8 <- function() {
duration = 200
df <- t(data.frame(neutral_time_series(init_community_max(100),duration)))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
df$Time <- 0:duration
data <- data.frame()
for (i in 1:100){
data1 <- data.frame(i = df[i], Time <- 0:duration)
colnames(data1) <- c("num","Time")
data <- rbind(data,data1)
}
plot(data$num, data$Time, pch=20)
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
question_8()
duration = 200
df <- t(data.frame(neutral_time_series(init_community_max(100),duration)))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
duration = 200
community = 100
df <- t(data.frame(neutral_time_series(init_community_max(community),duration)))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
df$Time <- 0:duration
rm(list = ls())
duration = 200
community = 100
df <- t(data.frame(neutral_time_series(init_community_max(community),duration)))
# Question 1
species_richness <- function(community){
length(unique(community))
}
# Question 2
init_community_max <- function(size){
seq(size)
}
# Question 3
init_community_min <- function(size){
seq(1,1,length.out=size)
}
# Question 4
choose_two <- function(max_value){
sample(max_value,size=2)
}
# Question 5
neutral_step <- function(community){
c <- choose_two(community)
community[community == c[1]] = c[2]
return(community)
}
# Question 6
neutral_generation <- function(community){
num = species_richness(community)/2
while (species_richness(community)>ceiling(num)) {
community <- neutral_step(community)
}
return(community)
}
# Question 7
neutral_time_series <- function(community,duration)  {
c <- community
ls <- list(c)
for (i in 1:duration) {
c <- neutral_generation(c)
ls[i+1] <- list(c)
}
return(ls)
}
duration = 200
community = 100
df <- t(data.frame(neutral_time_series(init_community_max(community),duration)))
row.names(df) <- 1:(duration+1)
colnames(df) <- 1:length(community)
View(df)
